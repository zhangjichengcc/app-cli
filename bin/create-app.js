#!/usr/bin/env node
import{program as t}from"commander";import e from"inquirer";import o from"chalk";import r from"ora";import i from"log-symbols";import n from"fs";import c from"path";import a from"url";import s from"caw";import l from"content-disposition";import u from"archive-type";import f from"decompress";import m from"filenamify";import p from"get-stream";import h from"got";import g from"make-dir";import d from"pify";import b from"p-event";import y from"file-type";import E from"ext-name";import v,{spawnSync as k}from"child_process";import w from"assert";const N=c,T=a,j=s,O=l,S=u,x=f,M=m,P=p,R=h,G=g,q=b,z=y,I=E,D=d(n),$=(t,e)=>{const o=t.headers["content-disposition"];if(o){const t=O.parse(o);if(t.parameters&&t.parameters.filename)return t.parameters.filename}let r=(t=>N.basename(T.parse(t.requestUrl).pathname))(t);if(!N.extname(r)){const o=(z(e)||{}).ext||(t=>{const e=t.headers["content-type"];if(!e)return null;const o=I.mime(e);return 1!==o.length?null:o[0].ext})(t);o&&(r=`${r}.${o}`)}return r},B=t=>{let{protocol:e}=T.parse(t);return e&&(e=e.slice(0,-1)),e};var Y=v.spawn;const _=w,U=c,V=n;let W;try{W=require("glob")}catch(t){}const F={nosort:!0,silent:!0};let L=0;const X="win32"===process.platform,A=t=>{if(["unlink","chmod","stat","lstat","rmdir","readdir"].forEach((e=>{t[e]=t[e]||V[e],t[e+="Sync"]=t[e]||V[e]})),t.maxBusyTries=t.maxBusyTries||3,t.emfileWait=t.emfileWait||1e3,!1===t.glob&&(t.disableGlob=!0),!0!==t.disableGlob&&void 0===W)throw Error("glob dependency not found, set `options.disableGlob = true` if intentional");t.disableGlob=t.disableGlob||!1,t.glob=t.glob||F},C=(t,e,o)=>{"function"==typeof e&&(o=e,e={}),_(t,"rimraf: missing path"),_.equal(typeof t,"string","rimraf: path should be a string"),_.equal(typeof o,"function","rimraf: callback function required"),_(e,"rimraf: invalid options argument provided"),_.equal(typeof e,"object","rimraf: options should be object"),A(e);let r=0,i=null,n=0;const c=(t,c)=>t?o(t):(n=c.length,0===n?o():void c.forEach((t=>{const c=a=>{if(a){if(("EBUSY"===a.code||"ENOTEMPTY"===a.code||"EPERM"===a.code)&&r<e.maxBusyTries)return r++,setTimeout((()=>H(t,e,c)),100*r);if("EMFILE"===a.code&&L<e.emfileWait)return setTimeout((()=>H(t,e,c)),L++);"ENOENT"===a.code&&(a=null)}L=0,(t=>{i=i||t,0==--n&&o(i)})(a)};H(t,e,c)})));if(e.disableGlob||!W.hasMagic(t))return c(null,[t]);e.lstat(t,((o,r)=>{if(!o)return c(null,[t]);W(t,e.glob,c)}))},H=(t,e,o)=>{_(t),_(e),_("function"==typeof o),e.lstat(t,((r,i)=>r&&"ENOENT"===r.code?o(null):(r&&"EPERM"===r.code&&X&&J(t,e,r,o),i&&i.isDirectory()?Q(t,e,r,o):void e.unlink(t,(r=>{if(r){if("ENOENT"===r.code)return o(null);if("EPERM"===r.code)return X?J(t,e,r,o):Q(t,e,r,o);if("EISDIR"===r.code)return Q(t,e,r,o)}return o(r)})))))},J=(t,e,o,r)=>{_(t),_(e),_("function"==typeof r),e.chmod(t,438,(i=>{i?r("ENOENT"===i.code?null:o):e.stat(t,((i,n)=>{i?r("ENOENT"===i.code?null:o):n.isDirectory()?Q(t,e,o,r):e.unlink(t,r)}))}))},K=(t,e,o)=>{_(t),_(e);try{e.chmodSync(t,438)}catch(t){if("ENOENT"===t.code)return;throw o}let r;try{r=e.statSync(t)}catch(t){if("ENOENT"===t.code)return;throw o}r.isDirectory()?et(t,e,o):e.unlinkSync(t)},Q=(t,e,o,r)=>{_(t),_(e),_("function"==typeof r),e.rmdir(t,(i=>{!i||"ENOTEMPTY"!==i.code&&"EEXIST"!==i.code&&"EPERM"!==i.code?i&&"ENOTDIR"===i.code?r(o):r(i):Z(t,e,r)}))},Z=(t,e,o)=>{_(t),_(e),_("function"==typeof o),e.readdir(t,((r,i)=>{if(r)return o(r);let n,c=i.length;if(0===c)return e.rmdir(t,o);i.forEach((r=>{C(U.join(t,r),e,(r=>{if(!n)return r?o(n=r):void(0==--c&&e.rmdir(t,o))}))}))}))},tt=(t,e)=>{let o;if(A(e=e||{}),_(t,"rimraf: missing path"),_.equal(typeof t,"string","rimraf: path should be a string"),_(e,"rimraf: missing options"),_.equal(typeof e,"object","rimraf: options should be object"),e.disableGlob||!W.hasMagic(t))o=[t];else try{e.lstatSync(t),o=[t]}catch(r){o=W.sync(t,e.glob)}if(o.length)for(let t=0;t<o.length;t++){const r=o[t];let i;try{i=e.lstatSync(r)}catch(t){if("ENOENT"===t.code)return;"EPERM"===t.code&&X&&K(r,e,t)}try{i&&i.isDirectory()?et(r,e,null):e.unlinkSync(r)}catch(t){if("ENOENT"===t.code)return;if("EPERM"===t.code)return X?K(r,e,t):et(r,e,t);if("EISDIR"!==t.code)throw t;et(r,e,t)}}},et=(t,e,o)=>{_(t),_(e);try{e.rmdirSync(t)}catch(r){if("ENOENT"===r.code)return;if("ENOTDIR"===r.code)throw o;"ENOTEMPTY"!==r.code&&"EEXIST"!==r.code&&"EPERM"!==r.code||ot(t,e)}},ot=(t,e)=>{_(t),_(e),e.readdirSync(t).forEach((o=>tt(U.join(t,o),e)));const o=X?100:1;let r=0;for(;;){let i=!0;try{const n=e.rmdirSync(t,e);return i=!1,n}finally{if(++r<o&&i)continue}}};var rt=C;C.sync=tt;var it=(t,e,o)=>{"object"==typeof e&&(o=e,e=null);const r=B(t);o=Object.assign({encoding:null,rejectUnauthorized:"false"!==process.env.npm_config_strict_ssl},o);const i=j(o.proxy,{protocol:r}),n=R.stream(t,Object.assign({agent:i},o)).on("redirect",((t,e)=>{const i=B(e.href);i&&i!==r&&(e.agent=j(o.proxy,{protocol:i}))})),c=q(n,"response").then((t=>{const e=null===o.encoding?"buffer":o.encoding;return Promise.all([P(n,{encoding:e}),t])})).then((t=>{const[r,i]=t;if(!e)return o.extract&&S(r)?x(r,o):r;const n=o.filename||M($(i,r)),c=N.join(e,n);return o.extract&&S(r)?x(r,N.dirname(c),o):G(N.dirname(c)).then((()=>D.writeFile(c,r))).then((()=>r))}));return n.then=c.then.bind(c),n.catch=c.catch.bind(c),n},nt=function(t,e,o,r){"function"==typeof o&&(r=o,o=null);var i=(o=o||{}).git||"git",n=["clone"];o.shallow&&(n.push("--depth"),n.push("1")),n.push("--"),n.push(t),n.push(e),Y(i,n).on("close",(function(t){0==t?o.checkout?function(){var t=["checkout",o.checkout],n=Y(i,t,{cwd:e});n.on("close",(function(t){0==t?r&&r():r&&r(new Error("'git checkout' failed with status "+t))}))}():r&&r():r&&r(new Error("'git clone' failed with status "+t))}))},ct=rt.sync,at=function(t,e,o,r){"function"==typeof o&&(r=o,o=null);var i=(o=o||{}).clone||!1;delete o.clone;var n=(t=function(t){var e=/^(?:(direct):([^#]+)(?:#(.+))?)$/,o=e.exec(t);if(o)return{type:"direct",url:o[2],checkout:o[3]||"master"};var r=(o=(e=/^(?:(github|gitlab|bitbucket):)?(?:(.+):)?([^/]+)\/([^#]+)(?:#(.+))?$/).exec(t))[1]||"github",i=o[2]||null;return null==i&&("github"===r?i="github.com":"gitlab"===r?i="gitlab.com":"bitbucket"===r&&(i="bitbucket.org")),{type:r,origin:i,owner:o[3],name:o[4],checkout:o[5]||"master"}}(t)).url||function(t,e){var o,r=function(t,e){/^(f|ht)tps?:\/\//i.test(t)||(t=e?"git@"+t:"https://"+t);return t}(t.origin,e);/^git@/i.test(r)?r+=":":r+="/";e?o=r+t.owner+"/"+t.name+".git":"github"===t.type?o=r+t.owner+"/"+t.name+"/archive/"+t.checkout+".zip":"gitlab"===t.type?o=r+t.owner+"/"+t.name+"/repository/archive.zip?ref="+t.checkout:"bitbucket"===t.type&&(o=r+t.owner+"/"+t.name+"/get/"+t.checkout+".zip");return o}(t,i);if(i){var c={checkout:t.checkout,shallow:"master"===t.checkout,...o};nt(n,e,c,(function(t){void 0===t?(ct(e+"/.git"),r()):r(t)}))}else{var a={extract:!0,strip:1,mode:"666",...o,headers:{accept:"application/zip",...o.headers||{}}};it(n,e,a).then((function(t){r()})).catch((function(t){r(t)}))}};var st="0.0.1",lt={"app-cli":"bin/create-app.js"};const ut={Vue:"git@github.com:zhangjichengcc/create-app.git",React:"git@github.com:zhangjichengcc/create-ap.git",gitbook:"git@github.com:zhangjichengcc/create-app.git",docsify:"git@github.com:zhangjichengcc/create-app.git"};function ft(){e.prompt([{type:"input",name:"projectName",message:"请输入项目名称"},{type:"list",name:"frameTemplate",message:"请选择框架类型",choices:["Vue","React","gitbook","docsify"]}]).then((t=>{const{projectName:e,frameTemplate:n}=t,c=ut[n];(function(t,e){const{error:n}=k("git",["--version"]),c=t.replace(/^git@github\.com:(.*)\.git$/,"github:$1#main");return n?(console.log(i.warning,o.yellow("未添加Git环境变量引起，添加Git与git管理库的环境变量即可；")),console.log(i.info,o.green("或直接到模板地址下载：",t)),Promise.reject(n)):new Promise((function(t,n){const a=r("正在下载模板...");a.start(),at(c,e,(function(e){e?(a.fail("模板下载失败"),e.toString().includes("status 128")&&(console.log("\n",i.warning,o.yellow("Git默认开启了SSL验证，请尝试执行下面命令，关闭验证后再重试；")),console.log(i.info,o.green("git config --global http.sslVerify false"))),n(e)):(a.succeed("模板下载成功"),t())}))}))})(c,e).then((()=>{console.log(i.success,o.green("项目初始化完成"))})).catch((t=>{console.log("\n",i.info,o.yellow(`失败原因：${t}`),"\n",`请尝试直接下载模板：git clone ${c}`)}))}))}t.name(Object.keys(lt)[0]).usage("<command> [options]").version(st,"-v, --version").action((()=>{ft()})),t.parse(process.argv);
